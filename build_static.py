#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≤–µ—Ä—Å–∏–∏ Django —Å–∞–π—Ç–∞
"""
import os
import sys
import django
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(str(Path(__file__).parent))

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'blog_project.settings')
django.setup()

from django.core.management import call_command
from django.conf import settings
from django.template.loader import render_to_string
from django.urls import reverse
from blog.models import Category, Product
from blog.views import home_view, category_view, product_detail_view
import json

def build_static_site():
    """–°–±–æ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≤–µ—Ä—Å–∏–∏ —Å–∞–π—Ç–∞"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≤–µ—Ä—Å–∏–∏ —Å–∞–π—Ç–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    static_dir = Path("static")
    static_dir.mkdir(exist_ok=True)
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã Django
    print("üìÅ –ö–æ–ø–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã...")
    call_command('collectstatic', '--noinput', '--clear')
    
    # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    print("üè† –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...")
    context = home_view(None).context_data
    html_content = render_to_string('index.html', context)
    
    with open(static_dir / "index.html", "w", encoding="utf-8") as f:
        f.write(html_content)
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    print("üìÇ –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
    categories = Category.objects.all()
    for category in categories:
        context = category_view(None, category.slug).context_data
        html_content = render_to_string('category.html', context)
        
        category_dir = static_dir / "category" / category.slug
        category_dir.mkdir(parents=True, exist_ok=True)
        
        with open(category_dir / "index.html", "w", encoding="utf-8") as f:
            f.write(html_content)
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤
    print("üõçÔ∏è –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤...")
    products = Product.objects.all()
    for product in products:
        context = product_detail_view(None, product.id).context_data
        html_content = render_to_string('product_detail.html', context)
        
        product_dir = static_dir / "product" / str(product.id)
        product_dir.mkdir(parents=True, exist_ok=True)
        
        with open(product_dir / "index.html", "w", encoding="utf-8") as f:
            f.write(html_content)
    
    # –°–æ–∑–¥–∞–µ–º sitemap
    print("üó∫Ô∏è –°–æ–∑–¥–∞–µ–º sitemap...")
    sitemap = {
        "pages": [
            {"url": "/", "title": "–ì–ª–∞–≤–Ω–∞—è"},
        ],
        "categories": [
            {"url": f"/category/{cat.slug}/", "title": cat.name} 
            for cat in categories
        ],
        "products": [
            {"url": f"/product/{prod.id}/", "title": prod.name}
            for prod in products
        ]
    }
    
    with open(static_dir / "sitemap.json", "w", encoding="utf-8") as f:
        json.dump(sitemap, f, ensure_ascii=False, indent=2)
    
    # –°–æ–∑–¥–∞–µ–º robots.txt
    print("ü§ñ –°–æ–∑–¥–∞–µ–º robots.txt...")
    robots_content = """User-agent: *
Allow: /

Sitemap: /sitemap.json
"""
    
    with open(static_dir / "robots.txt", "w", encoding="utf-8") as f:
        f.write(robots_content)
    
    print("‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–µ—Ä—Å–∏—è —Å–∞–π—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω–∞!")
    print(f"üìÅ –§–∞–π–ª—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ: {static_dir.absolute()}")

if __name__ == "__main__":
    build_static_site()
